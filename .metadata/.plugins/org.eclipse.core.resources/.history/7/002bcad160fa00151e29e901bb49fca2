package leetcode;

import java.util.*;

public class Solution {
	public static void main(String[] args){
		System.out.println("hello leetcode");
		isAnagram("sdafasf" ,"wqrqwfsf");
	}
	
    public static boolean isAnagram(String s, String t) {
    	//242
    	int count;
    	char[] sCharArray = s.toCharArray();
    	char[] tCharArray = t.toCharArray();
    	TreeMap<Character,Integer> sMap = new TreeMap<Character,Integer>();
    	TreeMap<Character,Integer> tMap = new TreeMap<Character,Integer>();
    	for(int i=0;i<sCharArray.length;i++){
    		if(!sMap.containsKey(sCharArray[i])){
    			sMap.put(sCharArray[i],1);
    		}
    		else{
    			count = sMap.get(sCharArray[i])+1;
    			sMap.put(sCharArray[i],count);
    		}
    	}
    	for(int i=0;i<tCharArray.length;i++){
    		if(!tMap.containsKey(tCharArray[i])){
    			tMap.put(tCharArray[i],1);
    		}
    		else{
    			count = tMap.get(tCharArray[i])+1;
    			tMap.put(tCharArray[i],count);
    		}
    	}
    	Integer temp;
    	for(Character key:sMap.keySet()){
    		temp = sMap.get(key);
    		System.out.println(key.toString()+temp.toString());
    	}
    	System.out.println(sCharArray);
		return false; 
    }	
	
    public static void moveZeroes(int[] nums) {
    	//283
    	int temp;
    	for(int i=0;i<nums.length ;i++){
    		if(nums[i]==0){
    			for(int j=i;j<nums.length;j++){
    				if(nums[j] != 0){
	    				temp = nums[i];nums[i] = nums[j];nums[j] = temp;
	    				break;
    				}		
    			}
    		} 		
    	}
    	for(int i = 0; i < nums.length ;i++){
    		System.out.print(nums[i]+",");
    	}
        
    }
	
	public static int addDigits(int num){
		//258
		String s = String.valueOf(num);
		int sum = 0;
		char item;
		for(int i = 0 ;i<s.length() ;i++){
			item = s.charAt(i);
			sum += Integer.parseInt(String.valueOf(item));
		}
		if(String.valueOf(sum).length()>1){
			sum = addDigits(sum);
		}
		System.out.println(sum);
		return sum;
	}
	
	public static boolean canWinNim(int n){
		//292
		return (n%4) > 0 ? true:false;
	}
}
